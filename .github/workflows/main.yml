name: CI-CD Deploy VM Azure

on:
  push:
    branches: ["main"]

jobs:
  security:
    name: Security Check - Checkov
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install Python 3.8
        uses: actions/setup-python@v4 
        with:
          python-version: 3.8

      - name: Security Analysis with Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: terraform
          output_format: cli,sarif,json
          output_file_path: checkov-report.txt,results.sarif,checkov.json
          quiet: true
          soft_fail: true
          download_external_modules: true
          log_level: WARNING

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: results.sarif
          
      - name: Upload Checkov Report
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: checkov-reports
          path: |
            checkov-report.txt
            checkov.json

  CI:
    name: CI - Terraform Configuration Validation
    needs: security
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.11.4

      - name: Configure Azure credentials
        uses: azure/login@v2.3.0
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Initialize Terraform dependencies
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.BACKEND_RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ secrets.BACKEND_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ secrets.BACKEND_CONTAINER_NAME }}" \
            -backend-config="key=${{ secrets.BACKEND_KEY_CONFIG }}"

      - name: Validate Terraform configuration
        run: terraform validate
      
      - name: Check Terraform formatting
        run: terraform fmt -check

      - name: Generate Terraform execution plan
        run: terraform plan -input=false -var="admin_username=${{secrets.TFVARS_USERNAME_VM}}" -var="admin_password=${{secrets.TFVARS_PASSWORD_VM}}" -out=tfplan

      - name: Save tfplan as artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

  CD:
    name: CD - Deploy Azure VM
    needs: CI
    runs-on: ubuntu-latest
    if: ${{ success() }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4.2.2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.11.4

      - name: Configure Azure credentials
        uses: azure/login@v2.3.0
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Initialize Terraform
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.BACKEND_RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ secrets.BACKEND_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ secrets.BACKEND_CONTAINER_NAME }}" \
            -backend-config="key=${{ secrets.BACKEND_KEY_CONFIG }}"

      - name: Download tfplan
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Apply Terraform execution plan
        run: terraform apply -input=false -auto-approve -var="admin_username=${{secrets.TFVARS_USERNAME_VM}}" -var="admin_password=${{secrets.TFVARS_PASSWORD_VM}}" tfplan
